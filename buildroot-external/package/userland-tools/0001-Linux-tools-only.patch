From 3b16944d1f88dd25b27b484094e27bf7985cd777 Mon Sep 17 00:00:00 2001
From: j1nx <p.steenbergen@j1nx.nl>
Date: Wed, 26 Jan 2022 13:51:30 +0100
Subject: [PATCH 1/1] Linux tools only

---
 CMakeLists.txt                         | 46 +++++++++++++-------------
 host_applications/linux/CMakeLists.txt | 26 +++++++--------
 makefiles/cmake/vmcs.cmake             |  8 ++---
 3 files changed, 40 insertions(+), 40 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index fe67fc8..750da77 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -66,25 +66,25 @@ endif()
 add_subdirectory(interface/vcos)
 add_subdirectory(interface/vmcs_host)
 add_subdirectory(interface/vchiq_arm)
-if(NOT ARM64)
-   add_subdirectory(interface/khronos)
-endif()
+#if(NOT ARM64)
+#   add_subdirectory(interface/khronos)
+#endif()
 
 #add_subdirectory(opensrc/tools/lua)
-if(BUILD_MMAL)
-   include_directories(interface/mmal)
-   add_subdirectory(interface/mmal)
-   add_subdirectory(containers)
-endif()
+#if(BUILD_MMAL)
+#   include_directories(interface/mmal)
+#   add_subdirectory(interface/mmal)
+#   add_subdirectory(containers)
+#endif()
 
 # VidTex supports Android and Linux
-if(BUILD_MMAL_APPS)
-add_subdirectory(host_applications/android/apps/vidtex)
-endif(BUILD_MMAL_APPS)
+#if(BUILD_MMAL_APPS)
+#add_subdirectory(host_applications/android/apps/vidtex)
+#endif(BUILD_MMAL_APPS)
 
-if(NOT ARM64)
-   add_subdirectory(middleware/openmaxil)
-endif()
+#if(NOT ARM64)
+#   add_subdirectory(middleware/openmaxil)
+#endif()
 
 # 3d demo code
 #if(NOT ANDROID)
@@ -118,15 +118,15 @@ add_subdirectory(helpers/dtoverlay)
 set(vmcs_host_apps_VERSION_MAJOR 1)
 set(vmcs_host_apps_VERSION_MINOR 0)
 
-include_directories("${PROJECT_BINARY_DIR}")
-include(FindPkgConfig QUIET)
-if(PKG_CONFIG_FOUND)
+#include_directories("${PROJECT_BINARY_DIR}")
+#include(FindPkgConfig QUIET)
+#if(PKG_CONFIG_FOUND)
 	# Produce a pkg-config file
-	foreach(PCFILE bcm_host.pc brcmegl.pc brcmglesv2.pc brcmvg.pc vcsm.pc mmal.pc)
-		configure_file("pkgconfig/${PCFILE}.in" "${PCFILE}" @ONLY)
-		install(FILES       "${CMAKE_CURRENT_BINARY_DIR}/${PCFILE}"
-			DESTINATION "${CMAKE_INSTALL_PREFIX}/lib/pkgconfig")
-	endforeach()
-endif()
+#	foreach(PCFILE bcm_host.pc brcmegl.pc brcmglesv2.pc brcmvg.pc vcsm.pc mmal.pc)
+#		configure_file("pkgconfig/${PCFILE}.in" "${PCFILE}" @ONLY)
+#		install(FILES       "${CMAKE_CURRENT_BINARY_DIR}/${PCFILE}"
+#			DESTINATION "${CMAKE_INSTALL_PREFIX}/lib/pkgconfig")
+#	endforeach()
+#endif()
 # Remove cache entry, if one added by command line
 unset(KHRONOS_EGL_PLATFORM CACHE)
diff --git a/host_applications/linux/CMakeLists.txt b/host_applications/linux/CMakeLists.txt
index 928b637..7833b4e 100644
--- a/host_applications/linux/CMakeLists.txt
+++ b/host_applications/linux/CMakeLists.txt
@@ -1,23 +1,23 @@
 # linux apps
 
 add_subdirectory(libs/bcm_host)
-add_subdirectory(apps/gencmd)
+#add_subdirectory(apps/gencmd)
 add_subdirectory(apps/tvservice)
-add_subdirectory(apps/vcmailbox)
-if(NOT ARM64)
-   add_subdirectory(apps/raspicam)
-   add_subdirectory(libs/sm)
-   add_subdirectory(apps/smem)
-endif()
+#add_subdirectory(apps/vcmailbox)
+#if(NOT ARM64)
+#   add_subdirectory(apps/raspicam)
+#   add_subdirectory(libs/sm)
+#   add_subdirectory(apps/smem)
+#endif()
 add_subdirectory(libs/debug_sym)
 add_subdirectory(apps/dtoverlay)
 add_subdirectory(apps/dtmerge)
 
-if(ALL_APPS)
- add_subdirectory(apps/vcdbg)
- add_subdirectory(libs/elftoolchain)
+#if(ALL_APPS)
+# add_subdirectory(apps/vcdbg)
+# add_subdirectory(libs/elftoolchain)
  # add_subdirectory(apps/smct)
- add_subdirectory(apps/edid_parser)
- add_subdirectory(apps/hello_pi)
-endif()
+# add_subdirectory(apps/edid_parser)
+# add_subdirectory(apps/hello_pi)
+#endif()
 
diff --git a/makefiles/cmake/vmcs.cmake b/makefiles/cmake/vmcs.cmake
index 7c97463..7d19c1b 100644
--- a/makefiles/cmake/vmcs.cmake
+++ b/makefiles/cmake/vmcs.cmake
@@ -59,8 +59,8 @@ configure_file (
 #        PERMISSIONS OWNER_WRITE WORLD_READ)
 
 # provide hello_pi demos
-install(DIRECTORY host_applications/linux/apps/hello_pi
-        DESTINATION ${VMCS_INSTALL_PREFIX}/src)
+#install(DIRECTORY host_applications/linux/apps/hello_pi
+#        DESTINATION ${VMCS_INSTALL_PREFIX}/src)
 
 # provide header files
 #install(DIRECTORY host_applications/linux/libs/bcm_host/include
@@ -74,8 +74,8 @@ install(DIRECTORY ${vmcs_root}/vcinclude           DESTINATION ${VMCS_INSTALL_PR
 install(DIRECTORY ${vmcs_root}/interface/peer      DESTINATION ${VMCS_INSTALL_PREFIX}/include/interface FILES_MATCHING PATTERN "*.h")
 install(DIRECTORY ${vmcs_root}/interface/vmcs_host DESTINATION ${VMCS_INSTALL_PREFIX}/include/interface FILES_MATCHING PATTERN "*.h" PATTERN "${vmcs_root}/interface/vmcs_host/khronos" EXCLUDE)
 
-install(DIRECTORY ${vmcs_root}/interface/khronos/include       DESTINATION ${VMCS_INSTALL_PREFIX}     FILES_MATCHING PATTERN "*.h")
-install(DIRECTORY ${vmcs_root}/interface/vmcs_host/khronos/IL  DESTINATION ${VMCS_INSTALL_PREFIX}/include     FILES_MATCHING PATTERN "*.h")
+#install(DIRECTORY ${vmcs_root}/interface/khronos/include       DESTINATION ${VMCS_INSTALL_PREFIX}     FILES_MATCHING PATTERN "*.h")
+#install(DIRECTORY ${vmcs_root}/interface/vmcs_host/khronos/IL  DESTINATION ${VMCS_INSTALL_PREFIX}/include     FILES_MATCHING PATTERN "*.h")
 
 install(DIRECTORY ${vmcs_root}/host_applications/linux/libs/bcm_host/include     DESTINATION ${VMCS_INSTALL_PREFIX}       FILES_MATCHING PATTERN "*.h")
 
-- 
2.20.1

